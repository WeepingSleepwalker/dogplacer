{"version":3,"sources":["components/husky.jpeg","mapStyles.js","components/Dogwalker.js","App.js","reportWebVitals.js","index.js"],"names":["husky","require","Dogwalker","src","default","alt","class","type","name","placeholder","required","value","libraries","mapContainerStyle","width","height","center","lat","lng","options","styles","mapStyles","disableDefaultUI","zoomControl","App","console","log","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","React","useState","markers","setMarkers","selected","setSelected","onMapClick","useCallback","event","current","latLng","time","Date","mapRef","useRef","onMapLoad","map","className","exact","path","zoom","onClick","onLoad","marker","position","icon","url","scaledSize","window","google","maps","Size","origin","Point","anchor","toISOString","onCloseClick","style","color","to","formatRelative","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IAAA,OAAe,cAA0B,oC,2ICA1B,G,MAAA,CACX,CACI,YAAe,MACf,YAAe,MACf,QAAW,CACP,CACI,WAAc,QAI1B,CACI,YAAe,MACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,OAElB,CACI,WAAc,UAI1B,CACI,YAAe,MACf,YAAe,mBACf,QAAW,CACP,CACI,WAAc,IAElB,CACI,MAAS,WAEb,CACI,UAAa,IAEjB,CACI,WAAc,SAI1B,CACI,YAAe,MACf,YAAe,qBACf,QAAW,CACP,CACI,WAAc,OAElB,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,MACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,iBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,iBACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,IAEjB,CACI,OAAU,OAItB,CACI,YAAe,YACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,YACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,YACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,oBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,WACf,QAAW,CACP,CACI,UAAa,MAIzB,CACI,YAAe,MACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,WACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,eACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,MAIzB,CACI,YAAe,eACf,YAAe,kBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,UAAa,IAEjB,CACI,OAAU,MAItB,CACI,YAAe,g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","file":"static/js/main.5d6cb908.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/husky.9613fb63.jpeg\";","export default [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            },\n            {\n                \"saturation\": \"-100\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"saturation\": 36\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 40\n            },\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            },\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 17\n            },\n            {\n                \"weight\": 1.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 20\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#4d6059\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#4d6059\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.natural\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#4d6059\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"lightness\": 21\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#4d6059\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#4d6059\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            },\n            {\n                \"color\": \"#7f8d89\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f8d89\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f8d89\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f8d89\"\n            },\n            {\n                \"lightness\": 29\n            },\n            {\n                \"weight\": 0.2\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 18\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f8d89\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f8d89\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f8d89\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#7f8d89\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#000000\"\n            },\n            {\n                \"lightness\": 19\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#2b3638\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [\n            {\n                \"color\": \"#2b3638\"\n            },\n            {\n                \"lightness\": 17\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#24282b\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#24282b\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    }\n]","import React from 'react'\n\n\n\nconst husky = require(\"./husky.jpeg\")\nconst Dogwalker = () => {\n    return (\n        <div>\n            <p>Sign in to meet:</p>\n            <p>Solomon Crusty</p>\n            <img src={husky.default} alt=\"Husky\"></img>\n            <div class=\"col\">\n                <div class=\"hide-md-lg\">\n                    \n                    <p>Picture of dog required</p>\n                </div>\n\n                <input type=\"text\" name=\"username\" placeholder=\"Username\" required></input>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" required></input>\n                        <input type=\"submit\" value=\"Login\"></input>\n                        </div>\n        </div>\n                    \n                    )\n}\n\n                    export default Dogwalker\n","import React from 'react';\nimport { Route, Switch, Link } from \"react-router-dom\"\nimport './App.css';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport { formatRelative } from 'date-fns';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox';\nimport mapStyles from \"./mapStyles.js\";\nimport Dogwalker from './components/Dogwalker';\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"100vw\",\n  height: \"100vw\",\n};\nconst center = {\n  lat: 47.630, lng: -122.303\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n\n};\n\n\n\nfunction App() {\n  console.log(mapStyles);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries,\n\n  });\n  // hook for marker\n  const [markers, setMarkers] = React.useState([]);\n  // hook for the note created by the marker\n  const [selected, setSelected] = React.useState(null);\n\n\n  // set the onclick event with the time as the ID and the data from onclick event\n  const onMapClick = React.useCallback((event) => {\n\n    setMarkers((current) => [\n      ...current,\n      {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date(),\n      },\n    ]);\n  }, []);\n  // use Ref to keep the map with no re-rendering\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"loading maps\";\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\">\n          <header className=\"App-header\">\n            <h3>Other Dog walkers in your Neighborhood</h3>\n            <GoogleMap\n              mapContainerStyle={mapContainerStyle}\n              zoom={14}\n              center={center}\n              options={options}\n              onClick={onMapClick}\n              onLoad={onMapLoad}\n            >\n              {markers.map(marker =>\n                <Marker\n                  key={marker.time.toISOString()}\n                  position={{ lat: marker.lat, lng: marker.lng }}\n                  icon={{\n                    url: \"/dogwalk.png\",\n                    // format the centering the icon\n                    scaledSize: new window.google.maps.Size(20, 20),\n                    origin: new window.google.maps.Point(0, 0),\n                    anchor: new window.google.maps.Point(10, 10)\n                  }}\n                  // making a new note by passing the marker in onCLick event\n                  onClick={() => {\n                    setSelected(marker);\n                  }}\n                />\n              )}\n              {selected ? (\n                <InfoWindow\n                  position={{ lat: selected.lat, lng: selected.lng }}\n                  onCloseClick={() => {\n                    setSelected(null);\n                  }}\n                >\n                  <div>\n                    <Link style={{ color: \"purple\" }} to=\"/dogwalker\">Doggo</Link>\n                    <p style={{ color: 'purple' }}>Spotted {formatRelative(selected.time, new Date())}</p>\n                  </div>\n                </InfoWindow>\n              ) : null}\n            </GoogleMap>\n          </header>\n        </Route>\n        <Route exact path=\"/dogwalker\">\n          <Dogwalker />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}